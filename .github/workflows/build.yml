name: Build

on:
  push:
    branches: [main]
    tags: ["v*"]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      # Linux AppImage setup
      - name: Prepare AppImage build (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-gi python3-gi-cairo gir1.2-gtk-3.0
          pip install appimage-builder

      # Windows NSIS setup
      - name: Install NSIS (Windows)
        if: runner.os == 'Windows'
        run: choco install nsis

      # macOS DMG setup
      - name: Install dmgbuild (macOS)
        if: runner.os == 'macOS'
        run: pip install dmgbuild

      - name: Build with PyInstaller
        run: pyinstaller main.spec

      # Create platform-specific packages
      - name: Create AppImage (Linux)
        if: runner.os == 'Linux'
        run: |
          # AppImage creation commands...
          mv UserChromeLoader-x86_64.AppImage userchrome-loader-linux.AppImage

      - name: Create Windows Installer
        if: runner.os == 'Windows'
        run: |
          makensis /DPRODUCT_VERSION="${{ github.ref_name }}" installer.nsi
          mv UserChromeLoader-Setup.exe userchrome-loader-windows-setup.exe

      - name: Create macOS DMG
        if: runner.os == 'macOS'
        run: |
          dmgbuild -s dmg_settings.py "UserChrome Loader" UserChromeLoader.dmg
          mv UserChromeLoader.dmg userchrome-loader-macos.dmg

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: userchrome-loader-${{ runner.os }}
          path: |
            *.AppImage
            *-setup.exe
            *.dmg
          retention-days: 90

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            userchrome-loader-Linux/*.AppImage
            userchrome-loader-Windows/*-setup.exe
            userchrome-loader-macOS/*.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
